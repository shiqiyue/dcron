// Code generated by go-queryset. DO NOT EDIT.
package gorm

import (
	"errors"
	"fmt"
	"strings"
	"time"

	"gorm.io/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set JobMetaQuerySet

// JobMetaQuerySet is an queryset type for JobMeta
type JobMetaQuerySet struct {
	db *gorm.DB
}

// NewJobMetaQuerySet constructs new JobMetaQuerySet
func NewJobMetaQuerySet(db *gorm.DB) JobMetaQuerySet {
	return JobMetaQuerySet{
		db: db.Model(&JobMeta{}),
	}
}

func (qs JobMetaQuerySet) w(db *gorm.DB) JobMetaQuerySet {
	return NewJobMetaQuerySet(db)
}

func (qs JobMetaQuerySet) With(callback func(db *gorm.DB) *gorm.DB) JobMetaQuerySet {
	return qs.w(callback(qs.db))
}

func (qs JobMetaQuerySet) Select(fields ...JobMetaDBSchemaField) JobMetaQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *JobMeta) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *JobMeta) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) All(ret *[]*JobMeta) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CreatedAtEq(createdAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CreatedAtGt(createdAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CreatedAtGte(createdAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CreatedAtLt(createdAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CreatedAtLte(createdAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CreatedAtNe(createdAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// CronEq is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronEq(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron = ?", cron))
}

// CronGt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronGt(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron > ?", cron))
}

// CronGte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronGte(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron >= ?", cron))
}

// CronIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronIn(cron ...string) JobMetaQuerySet {
	if len(cron) == 0 {
		qs.db.AddError(errors.New("must at least pass one cron in CronIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cron IN (?)", cron))
}

// CronLike is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronLike(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron LIKE ?", cron))
}

// CronLt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronLt(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron < ?", cron))
}

// CronLte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronLte(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron <= ?", cron))
}

// CronNe is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronNe(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron != ?", cron))
}

// CronNotIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronNotIn(cron ...string) JobMetaQuerySet {
	if len(cron) == 0 {
		qs.db.AddError(errors.New("must at least pass one cron in CronNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("cron NOT IN (?)", cron))
}

// CronNotlike is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) CronNotlike(cron string) JobMetaQuerySet {
	return qs.w(qs.db.Where("cron NOT LIKE ?", cron))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) Delete() error {
	return qs.db.Delete(&JobMeta{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(&JobMeta{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(&JobMeta{})
	return db.RowsAffected, db.Error
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) GetUpdater() JobMetaUpdater {
	return NewJobMetaUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDEq(ID int64) JobMetaQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDGt(ID int64) JobMetaQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDGte(ID int64) JobMetaQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDIn(ID ...int64) JobMetaQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDLt(ID int64) JobMetaQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDLte(ID int64) JobMetaQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDNe(ID int64) JobMetaQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) IDNotIn(ID ...int64) JobMetaQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// JobNameEq is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameEq(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name = ?", jobName))
}

// JobNameGt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameGt(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name > ?", jobName))
}

// JobNameGte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameGte(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name >= ?", jobName))
}

// JobNameIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameIn(jobName ...string) JobMetaQuerySet {
	if len(jobName) == 0 {
		qs.db.AddError(errors.New("must at least pass one jobName in JobNameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("job_name IN (?)", jobName))
}

// JobNameLike is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameLike(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name LIKE ?", jobName))
}

// JobNameLt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameLt(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name < ?", jobName))
}

// JobNameLte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameLte(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name <= ?", jobName))
}

// JobNameNe is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameNe(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name != ?", jobName))
}

// JobNameNotIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameNotIn(jobName ...string) JobMetaQuerySet {
	if len(jobName) == 0 {
		qs.db.AddError(errors.New("must at least pass one jobName in JobNameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("job_name NOT IN (?)", jobName))
}

// JobNameNotlike is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) JobNameNotlike(jobName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("job_name NOT LIKE ?", jobName))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) Limit(limit int) JobMetaQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) Offset(offset int) JobMetaQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs JobMetaQuerySet) One(ret *JobMeta) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderAscByCreatedAt() JobMetaQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByCron is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderAscByCron() JobMetaQuerySet {
	return qs.w(qs.db.Order("cron ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderAscByID() JobMetaQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByJobName is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderAscByJobName() JobMetaQuerySet {
	return qs.w(qs.db.Order("job_name ASC"))
}

// OrderAscByServiceName is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderAscByServiceName() JobMetaQuerySet {
	return qs.w(qs.db.Order("service_name ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderAscByUpdatedAt() JobMetaQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderDescByCreatedAt() JobMetaQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByCron is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderDescByCron() JobMetaQuerySet {
	return qs.w(qs.db.Order("cron DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderDescByID() JobMetaQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByJobName is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderDescByJobName() JobMetaQuerySet {
	return qs.w(qs.db.Order("job_name DESC"))
}

// OrderDescByServiceName is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderDescByServiceName() JobMetaQuerySet {
	return qs.w(qs.db.Order("service_name DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) OrderDescByUpdatedAt() JobMetaQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PreloadDeletedAt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) PreloadDeletedAt() JobMetaQuerySet {
	return qs.w(qs.db.Preload("DeletedAt"))
}

// ServiceNameEq is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameEq(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name = ?", serviceName))
}

// ServiceNameGt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameGt(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name > ?", serviceName))
}

// ServiceNameGte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameGte(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name >= ?", serviceName))
}

// ServiceNameIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameIn(serviceName ...string) JobMetaQuerySet {
	if len(serviceName) == 0 {
		qs.db.AddError(errors.New("must at least pass one serviceName in ServiceNameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("service_name IN (?)", serviceName))
}

// ServiceNameLike is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameLike(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name LIKE ?", serviceName))
}

// ServiceNameLt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameLt(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name < ?", serviceName))
}

// ServiceNameLte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameLte(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name <= ?", serviceName))
}

// ServiceNameNe is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameNe(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name != ?", serviceName))
}

// ServiceNameNotIn is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameNotIn(serviceName ...string) JobMetaQuerySet {
	if len(serviceName) == 0 {
		qs.db.AddError(errors.New("must at least pass one serviceName in ServiceNameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("service_name NOT IN (?)", serviceName))
}

// ServiceNameNotlike is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) ServiceNameNotlike(serviceName string) JobMetaQuerySet {
	return qs.w(qs.db.Where("service_name NOT LIKE ?", serviceName))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) UpdatedAtEq(updatedAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) UpdatedAtGt(updatedAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) UpdatedAtGte(updatedAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) UpdatedAtLt(updatedAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) UpdatedAtLte(updatedAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs JobMetaQuerySet) UpdatedAtNe(updatedAt time.Time) JobMetaQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// IncCreatedAt is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) IncCreatedAt(createdAt time.Time) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.CreatedAt)] = gorm.Expr(string(JobMetaDBSchema.CreatedAt)+" + ?", createdAt)
	return u
}

// IncID is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) IncID(ID int64) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.ID)] = gorm.Expr(string(JobMetaDBSchema.ID)+" + ?", ID)
	return u
}

// IncUpdatedAt is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) IncUpdatedAt(updatedAt time.Time) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.UpdatedAt)] = gorm.Expr(string(JobMetaDBSchema.UpdatedAt)+" + ?", updatedAt)
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetCreatedAt(createdAt time.Time) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.CreatedAt)] = createdAt
	return u
}

// SetCron is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetCron(cron string) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.Cron)] = cron
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetDeletedAt(deletedAt gorm.DeletedAt) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetID(ID int64) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.ID)] = ID
	return u
}

// SetJobName is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetJobName(jobName string) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.JobName)] = jobName
	return u
}

// SetServiceName is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetServiceName(serviceName string) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.ServiceName)] = serviceName
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) SetUpdatedAt(updatedAt time.Time) JobMetaUpdater {
	u.fields[string(JobMetaDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// With is an autogenerated method
// nolint: dupl
func (u JobMetaUpdater) With(callback func(fields map[string]interface{}) map[string]interface{}) JobMetaUpdater {
	u.fields = callback(u.fields)
	return u
}

// ===== END of query set JobMetaQuerySet

// ===== BEGIN of JobMeta modifiers

// JobMetaDBSchemaField describes database schema field. It requires for method 'Update'
type JobMetaDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f JobMetaDBSchemaField) String() string {
	return string(f)
}

// JobMetaDBSchema stores db field names of JobMeta
var JobMetaDBSchema = struct {
	ID          JobMetaDBSchemaField
	CreatedAt   JobMetaDBSchemaField
	UpdatedAt   JobMetaDBSchemaField
	DeletedAt   JobMetaDBSchemaField
	ServiceName JobMetaDBSchemaField
	JobName     JobMetaDBSchemaField
	Cron        JobMetaDBSchemaField
}{

	ID:          JobMetaDBSchemaField("id"),
	CreatedAt:   JobMetaDBSchemaField("created_at"),
	UpdatedAt:   JobMetaDBSchemaField("updated_at"),
	DeletedAt:   JobMetaDBSchemaField("deleted_at"),
	ServiceName: JobMetaDBSchemaField("service_name"),
	JobName:     JobMetaDBSchemaField("job_name"),
	Cron:        JobMetaDBSchemaField("cron"),
}

// Update updates JobMeta fields by primary key
// nolint: dupl
func (o *JobMeta) Update(db *gorm.DB, fields ...JobMetaDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"deleted_at":   o.DeletedAt,
		"service_name": o.ServiceName,
		"job_name":     o.JobName,
		"cron":         o.Cron,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update JobMeta %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// JobMetaUpdater is an JobMeta updates manager
type JobMetaUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewJobMetaUpdater creates new JobMeta updater
// nolint: dupl
func NewJobMetaUpdater(db *gorm.DB) JobMetaUpdater {
	return JobMetaUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&JobMeta{}),
	}
}

// ===== END of JobMeta modifiers

// ===== BEGIN of query set JobNodeQuerySet

// JobNodeQuerySet is an queryset type for JobNode
type JobNodeQuerySet struct {
	db *gorm.DB
}

// NewJobNodeQuerySet constructs new JobNodeQuerySet
func NewJobNodeQuerySet(db *gorm.DB) JobNodeQuerySet {
	return JobNodeQuerySet{
		db: db.Model(&JobNode{}),
	}
}

func (qs JobNodeQuerySet) w(db *gorm.DB) JobNodeQuerySet {
	return NewJobNodeQuerySet(db)
}

func (qs JobNodeQuerySet) With(callback func(db *gorm.DB) *gorm.DB) JobNodeQuerySet {
	return qs.w(callback(qs.db))
}

func (qs JobNodeQuerySet) Select(fields ...JobNodeDBSchemaField) JobNodeQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *JobNode) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *JobNode) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) All(ret *[]*JobNode) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) CreatedAtEq(createdAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) CreatedAtGt(createdAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) CreatedAtGte(createdAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) CreatedAtLt(createdAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) CreatedAtLte(createdAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) CreatedAtNe(createdAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) Delete() error {
	return qs.db.Delete(&JobNode{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(&JobNode{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(&JobNode{})
	return db.RowsAffected, db.Error
}

// ExpiredAtEq is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtEq(expiredAt int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("expired_at = ?", expiredAt))
}

// ExpiredAtGt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtGt(expiredAt int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("expired_at > ?", expiredAt))
}

// ExpiredAtGte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtGte(expiredAt int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("expired_at >= ?", expiredAt))
}

// ExpiredAtIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtIn(expiredAt ...int64) JobNodeQuerySet {
	if len(expiredAt) == 0 {
		qs.db.AddError(errors.New("must at least pass one expiredAt in ExpiredAtIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("expired_at IN (?)", expiredAt))
}

// ExpiredAtLt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtLt(expiredAt int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("expired_at < ?", expiredAt))
}

// ExpiredAtLte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtLte(expiredAt int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("expired_at <= ?", expiredAt))
}

// ExpiredAtNe is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtNe(expiredAt int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("expired_at != ?", expiredAt))
}

// ExpiredAtNotIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ExpiredAtNotIn(expiredAt ...int64) JobNodeQuerySet {
	if len(expiredAt) == 0 {
		qs.db.AddError(errors.New("must at least pass one expiredAt in ExpiredAtNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("expired_at NOT IN (?)", expiredAt))
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) GetUpdater() JobNodeUpdater {
	return NewJobNodeUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDEq(ID int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDGt(ID int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDGte(ID int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDIn(ID ...int64) JobNodeQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDLt(ID int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDLte(ID int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDNe(ID int64) JobNodeQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) IDNotIn(ID ...int64) JobNodeQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) Limit(limit int) JobNodeQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// NodeIdEq is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdEq(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id = ?", nodeId))
}

// NodeIdGt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdGt(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id > ?", nodeId))
}

// NodeIdGte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdGte(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id >= ?", nodeId))
}

// NodeIdIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdIn(nodeId ...string) JobNodeQuerySet {
	if len(nodeId) == 0 {
		qs.db.AddError(errors.New("must at least pass one nodeId in NodeIdIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("node_id IN (?)", nodeId))
}

// NodeIdLike is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdLike(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id LIKE ?", nodeId))
}

// NodeIdLt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdLt(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id < ?", nodeId))
}

// NodeIdLte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdLte(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id <= ?", nodeId))
}

// NodeIdNe is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdNe(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id != ?", nodeId))
}

// NodeIdNotIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdNotIn(nodeId ...string) JobNodeQuerySet {
	if len(nodeId) == 0 {
		qs.db.AddError(errors.New("must at least pass one nodeId in NodeIdNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("node_id NOT IN (?)", nodeId))
}

// NodeIdNotlike is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) NodeIdNotlike(nodeId string) JobNodeQuerySet {
	return qs.w(qs.db.Where("node_id NOT LIKE ?", nodeId))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) Offset(offset int) JobNodeQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs JobNodeQuerySet) One(ret *JobNode) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderAscByCreatedAt() JobNodeQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByExpiredAt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderAscByExpiredAt() JobNodeQuerySet {
	return qs.w(qs.db.Order("expired_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderAscByID() JobNodeQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByNodeId is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderAscByNodeId() JobNodeQuerySet {
	return qs.w(qs.db.Order("node_id ASC"))
}

// OrderAscByServiceName is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderAscByServiceName() JobNodeQuerySet {
	return qs.w(qs.db.Order("service_name ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderAscByUpdatedAt() JobNodeQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderDescByCreatedAt() JobNodeQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByExpiredAt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderDescByExpiredAt() JobNodeQuerySet {
	return qs.w(qs.db.Order("expired_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderDescByID() JobNodeQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByNodeId is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderDescByNodeId() JobNodeQuerySet {
	return qs.w(qs.db.Order("node_id DESC"))
}

// OrderDescByServiceName is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderDescByServiceName() JobNodeQuerySet {
	return qs.w(qs.db.Order("service_name DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) OrderDescByUpdatedAt() JobNodeQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// ServiceNameEq is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameEq(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name = ?", serviceName))
}

// ServiceNameGt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameGt(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name > ?", serviceName))
}

// ServiceNameGte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameGte(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name >= ?", serviceName))
}

// ServiceNameIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameIn(serviceName ...string) JobNodeQuerySet {
	if len(serviceName) == 0 {
		qs.db.AddError(errors.New("must at least pass one serviceName in ServiceNameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("service_name IN (?)", serviceName))
}

// ServiceNameLike is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameLike(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name LIKE ?", serviceName))
}

// ServiceNameLt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameLt(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name < ?", serviceName))
}

// ServiceNameLte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameLte(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name <= ?", serviceName))
}

// ServiceNameNe is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameNe(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name != ?", serviceName))
}

// ServiceNameNotIn is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameNotIn(serviceName ...string) JobNodeQuerySet {
	if len(serviceName) == 0 {
		qs.db.AddError(errors.New("must at least pass one serviceName in ServiceNameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("service_name NOT IN (?)", serviceName))
}

// ServiceNameNotlike is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) ServiceNameNotlike(serviceName string) JobNodeQuerySet {
	return qs.w(qs.db.Where("service_name NOT LIKE ?", serviceName))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) UpdatedAtEq(updatedAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) UpdatedAtGt(updatedAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) UpdatedAtGte(updatedAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) UpdatedAtLt(updatedAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) UpdatedAtLte(updatedAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs JobNodeQuerySet) UpdatedAtNe(updatedAt time.Time) JobNodeQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// IncCreatedAt is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) IncCreatedAt(createdAt time.Time) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.CreatedAt)] = gorm.Expr(string(JobNodeDBSchema.CreatedAt)+" + ?", createdAt)
	return u
}

// IncExpiredAt is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) IncExpiredAt(expiredAt int64) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.ExpiredAt)] = gorm.Expr(string(JobNodeDBSchema.ExpiredAt)+" + ?", expiredAt)
	return u
}

// IncID is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) IncID(ID int64) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.ID)] = gorm.Expr(string(JobNodeDBSchema.ID)+" + ?", ID)
	return u
}

// IncUpdatedAt is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) IncUpdatedAt(updatedAt time.Time) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.UpdatedAt)] = gorm.Expr(string(JobNodeDBSchema.UpdatedAt)+" + ?", updatedAt)
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) SetCreatedAt(createdAt time.Time) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.CreatedAt)] = createdAt
	return u
}

// SetExpiredAt is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) SetExpiredAt(expiredAt int64) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.ExpiredAt)] = expiredAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) SetID(ID int64) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.ID)] = ID
	return u
}

// SetNodeId is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) SetNodeId(nodeId string) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.NodeId)] = nodeId
	return u
}

// SetServiceName is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) SetServiceName(serviceName string) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.ServiceName)] = serviceName
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) SetUpdatedAt(updatedAt time.Time) JobNodeUpdater {
	u.fields[string(JobNodeDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// With is an autogenerated method
// nolint: dupl
func (u JobNodeUpdater) With(callback func(fields map[string]interface{}) map[string]interface{}) JobNodeUpdater {
	u.fields = callback(u.fields)
	return u
}

// ===== END of query set JobNodeQuerySet

// ===== BEGIN of JobNode modifiers

// JobNodeDBSchemaField describes database schema field. It requires for method 'Update'
type JobNodeDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f JobNodeDBSchemaField) String() string {
	return string(f)
}

// JobNodeDBSchema stores db field names of JobNode
var JobNodeDBSchema = struct {
	ID          JobNodeDBSchemaField
	CreatedAt   JobNodeDBSchemaField
	UpdatedAt   JobNodeDBSchemaField
	ServiceName JobNodeDBSchemaField
	NodeId      JobNodeDBSchemaField
	ExpiredAt   JobNodeDBSchemaField
}{

	ID:          JobNodeDBSchemaField("id"),
	CreatedAt:   JobNodeDBSchemaField("created_at"),
	UpdatedAt:   JobNodeDBSchemaField("updated_at"),
	ServiceName: JobNodeDBSchemaField("service_name"),
	NodeId:      JobNodeDBSchemaField("node_id"),
	ExpiredAt:   JobNodeDBSchemaField("expired_at"),
}

// Update updates JobNode fields by primary key
// nolint: dupl
func (o *JobNode) Update(db *gorm.DB, fields ...JobNodeDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"service_name": o.ServiceName,
		"node_id":      o.NodeId,
		"expired_at":   o.ExpiredAt,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update JobNode %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// JobNodeUpdater is an JobNode updates manager
type JobNodeUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewJobNodeUpdater creates new JobNode updater
// nolint: dupl
func NewJobNodeUpdater(db *gorm.DB) JobNodeUpdater {
	return JobNodeUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&JobNode{}),
	}
}

// ===== END of JobNode modifiers

// ===== BEGIN of query set JobServiceQuerySet

// JobServiceQuerySet is an queryset type for JobService
type JobServiceQuerySet struct {
	db *gorm.DB
}

// NewJobServiceQuerySet constructs new JobServiceQuerySet
func NewJobServiceQuerySet(db *gorm.DB) JobServiceQuerySet {
	return JobServiceQuerySet{
		db: db.Model(&JobService{}),
	}
}

func (qs JobServiceQuerySet) w(db *gorm.DB) JobServiceQuerySet {
	return NewJobServiceQuerySet(db)
}

func (qs JobServiceQuerySet) With(callback func(db *gorm.DB) *gorm.DB) JobServiceQuerySet {
	return qs.w(callback(qs.db))
}

func (qs JobServiceQuerySet) Select(fields ...JobServiceDBSchemaField) JobServiceQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *JobService) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *JobService) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) All(ret *[]*JobService) error {
	return qs.db.Find(ret).Error
}

// Count is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) CreatedAtEq(createdAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) CreatedAtGt(createdAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) CreatedAtGte(createdAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) CreatedAtLt(createdAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) CreatedAtLte(createdAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) CreatedAtNe(createdAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) Delete() error {
	return qs.db.Delete(&JobService{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(&JobService{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(&JobService{})
	return db.RowsAffected, db.Error
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) GetUpdater() JobServiceUpdater {
	return NewJobServiceUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDEq(ID int64) JobServiceQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDGt(ID int64) JobServiceQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDGte(ID int64) JobServiceQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDIn(ID ...int64) JobServiceQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDLt(ID int64) JobServiceQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDLte(ID int64) JobServiceQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDNe(ID int64) JobServiceQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) IDNotIn(ID ...int64) JobServiceQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) Limit(limit int) JobServiceQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) Offset(offset int) JobServiceQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs JobServiceQuerySet) One(ret *JobService) error {
	return qs.db.First(ret).Error
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderAscByCreatedAt() JobServiceQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderAscByID() JobServiceQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByServiceName is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderAscByServiceName() JobServiceQuerySet {
	return qs.w(qs.db.Order("service_name ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderAscByUpdatedAt() JobServiceQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderDescByCreatedAt() JobServiceQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderDescByID() JobServiceQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByServiceName is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderDescByServiceName() JobServiceQuerySet {
	return qs.w(qs.db.Order("service_name DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) OrderDescByUpdatedAt() JobServiceQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// PreloadDeletedAt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) PreloadDeletedAt() JobServiceQuerySet {
	return qs.w(qs.db.Preload("DeletedAt"))
}

// ServiceNameEq is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameEq(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name = ?", serviceName))
}

// ServiceNameGt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameGt(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name > ?", serviceName))
}

// ServiceNameGte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameGte(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name >= ?", serviceName))
}

// ServiceNameIn is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameIn(serviceName ...string) JobServiceQuerySet {
	if len(serviceName) == 0 {
		qs.db.AddError(errors.New("must at least pass one serviceName in ServiceNameIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("service_name IN (?)", serviceName))
}

// ServiceNameLike is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameLike(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name LIKE ?", serviceName))
}

// ServiceNameLt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameLt(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name < ?", serviceName))
}

// ServiceNameLte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameLte(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name <= ?", serviceName))
}

// ServiceNameNe is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameNe(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name != ?", serviceName))
}

// ServiceNameNotIn is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameNotIn(serviceName ...string) JobServiceQuerySet {
	if len(serviceName) == 0 {
		qs.db.AddError(errors.New("must at least pass one serviceName in ServiceNameNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("service_name NOT IN (?)", serviceName))
}

// ServiceNameNotlike is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) ServiceNameNotlike(serviceName string) JobServiceQuerySet {
	return qs.w(qs.db.Where("service_name NOT LIKE ?", serviceName))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) UpdatedAtEq(updatedAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) UpdatedAtGt(updatedAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) UpdatedAtGte(updatedAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) UpdatedAtLt(updatedAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) UpdatedAtLte(updatedAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs JobServiceQuerySet) UpdatedAtNe(updatedAt time.Time) JobServiceQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// IncCreatedAt is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) IncCreatedAt(createdAt time.Time) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.CreatedAt)] = gorm.Expr(string(JobServiceDBSchema.CreatedAt)+" + ?", createdAt)
	return u
}

// IncID is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) IncID(ID int64) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.ID)] = gorm.Expr(string(JobServiceDBSchema.ID)+" + ?", ID)
	return u
}

// IncUpdatedAt is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) IncUpdatedAt(updatedAt time.Time) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.UpdatedAt)] = gorm.Expr(string(JobServiceDBSchema.UpdatedAt)+" + ?", updatedAt)
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) SetCreatedAt(createdAt time.Time) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.CreatedAt)] = createdAt
	return u
}

// SetDeletedAt is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) SetDeletedAt(deletedAt gorm.DeletedAt) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.DeletedAt)] = deletedAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) SetID(ID int64) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.ID)] = ID
	return u
}

// SetServiceName is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) SetServiceName(serviceName string) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.ServiceName)] = serviceName
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) SetUpdatedAt(updatedAt time.Time) JobServiceUpdater {
	u.fields[string(JobServiceDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// With is an autogenerated method
// nolint: dupl
func (u JobServiceUpdater) With(callback func(fields map[string]interface{}) map[string]interface{}) JobServiceUpdater {
	u.fields = callback(u.fields)
	return u
}

// ===== END of query set JobServiceQuerySet

// ===== BEGIN of JobService modifiers

// JobServiceDBSchemaField describes database schema field. It requires for method 'Update'
type JobServiceDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f JobServiceDBSchemaField) String() string {
	return string(f)
}

// JobServiceDBSchema stores db field names of JobService
var JobServiceDBSchema = struct {
	ID          JobServiceDBSchemaField
	CreatedAt   JobServiceDBSchemaField
	UpdatedAt   JobServiceDBSchemaField
	DeletedAt   JobServiceDBSchemaField
	ServiceName JobServiceDBSchemaField
}{

	ID:          JobServiceDBSchemaField("id"),
	CreatedAt:   JobServiceDBSchemaField("created_at"),
	UpdatedAt:   JobServiceDBSchemaField("updated_at"),
	DeletedAt:   JobServiceDBSchemaField("deleted_at"),
	ServiceName: JobServiceDBSchemaField("service_name"),
}

// Update updates JobService fields by primary key
// nolint: dupl
func (o *JobService) Update(db *gorm.DB, fields ...JobServiceDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":           o.ID,
		"created_at":   o.CreatedAt,
		"updated_at":   o.UpdatedAt,
		"deleted_at":   o.DeletedAt,
		"service_name": o.ServiceName,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update JobService %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// JobServiceUpdater is an JobService updates manager
type JobServiceUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewJobServiceUpdater creates new JobService updater
// nolint: dupl
func NewJobServiceUpdater(db *gorm.DB) JobServiceUpdater {
	return JobServiceUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&JobService{}),
	}
}

// ===== END of JobService modifiers

// ===== BEGIN of query set MetaVersionQuerySet

// MetaVersionQuerySet is an queryset type for MetaVersion
type MetaVersionQuerySet struct {
	db *gorm.DB
}

// NewMetaVersionQuerySet constructs new MetaVersionQuerySet
func NewMetaVersionQuerySet(db *gorm.DB) MetaVersionQuerySet {
	return MetaVersionQuerySet{
		db: db.Model(&MetaVersion{}),
	}
}

func (qs MetaVersionQuerySet) w(db *gorm.DB) MetaVersionQuerySet {
	return NewMetaVersionQuerySet(db)
}

func (qs MetaVersionQuerySet) With(callback func(db *gorm.DB) *gorm.DB) MetaVersionQuerySet {
	return qs.w(callback(qs.db))
}

func (qs MetaVersionQuerySet) Select(fields ...MetaVersionDBSchemaField) MetaVersionQuerySet {
	names := []string{}
	for _, f := range fields {
		names = append(names, f.String())
	}

	return qs.w(qs.db.Select(strings.Join(names, ",")))
}

// Create is an autogenerated method
// nolint: dupl
func (o *MetaVersion) Create(db *gorm.DB) error {
	return db.Create(o).Error
}

// Delete is an autogenerated method
// nolint: dupl
func (o *MetaVersion) Delete(db *gorm.DB) error {
	return db.Delete(o).Error
}

// All is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) All(ret *[]*MetaVersion) error {
	return qs.db.Find(ret).Error
}

// CEq is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CEq(c int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("c = ?", c))
}

// CGt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CGt(c int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("c > ?", c))
}

// CGte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CGte(c int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("c >= ?", c))
}

// CIn is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CIn(c ...int64) MetaVersionQuerySet {
	if len(c) == 0 {
		qs.db.AddError(errors.New("must at least pass one c in CIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("c IN (?)", c))
}

// CLt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CLt(c int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("c < ?", c))
}

// CLte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CLte(c int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("c <= ?", c))
}

// CNe is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CNe(c int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("c != ?", c))
}

// CNotIn is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CNotIn(c ...int64) MetaVersionQuerySet {
	if len(c) == 0 {
		qs.db.AddError(errors.New("must at least pass one c in CNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("c NOT IN (?)", c))
}

// Count is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) Count() (int64, error) {
	var count int64
	err := qs.db.Count(&count).Error
	return count, err
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CreatedAtEq(createdAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("created_at = ?", createdAt))
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CreatedAtGt(createdAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("created_at > ?", createdAt))
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CreatedAtGte(createdAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("created_at >= ?", createdAt))
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CreatedAtLt(createdAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("created_at < ?", createdAt))
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CreatedAtLte(createdAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("created_at <= ?", createdAt))
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) CreatedAtNe(createdAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("created_at != ?", createdAt))
}

// Delete is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) Delete() error {
	return qs.db.Delete(&MetaVersion{}).Error
}

// DeleteNum is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) DeleteNum() (int64, error) {
	db := qs.db.Delete(&MetaVersion{})
	return db.RowsAffected, db.Error
}

// DeleteNumUnscoped is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) DeleteNumUnscoped() (int64, error) {
	db := qs.db.Unscoped().Delete(&MetaVersion{})
	return db.RowsAffected, db.Error
}

// GetDB is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) GetDB() *gorm.DB {
	return qs.db
}

// GetUpdater is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) GetUpdater() MetaVersionUpdater {
	return NewMetaVersionUpdater(qs.db)
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDEq(ID int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("id = ?", ID))
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDGt(ID int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("id > ?", ID))
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDGte(ID int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("id >= ?", ID))
}

// IDIn is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDIn(ID ...int64) MetaVersionQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id IN (?)", ID))
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDLt(ID int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("id < ?", ID))
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDLte(ID int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("id <= ?", ID))
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDNe(ID int64) MetaVersionQuerySet {
	return qs.w(qs.db.Where("id != ?", ID))
}

// IDNotIn is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) IDNotIn(ID ...int64) MetaVersionQuerySet {
	if len(ID) == 0 {
		qs.db.AddError(errors.New("must at least pass one ID in IDNotIn"))
		return qs.w(qs.db)
	}
	return qs.w(qs.db.Where("id NOT IN (?)", ID))
}

// Limit is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) Limit(limit int) MetaVersionQuerySet {
	return qs.w(qs.db.Limit(limit))
}

// Offset is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) Offset(offset int) MetaVersionQuerySet {
	return qs.w(qs.db.Offset(offset))
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs MetaVersionQuerySet) One(ret *MetaVersion) error {
	return qs.db.First(ret).Error
}

// OrderAscByC is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderAscByC() MetaVersionQuerySet {
	return qs.w(qs.db.Order("c ASC"))
}

// OrderAscByCreatedAt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderAscByCreatedAt() MetaVersionQuerySet {
	return qs.w(qs.db.Order("created_at ASC"))
}

// OrderAscByID is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderAscByID() MetaVersionQuerySet {
	return qs.w(qs.db.Order("id ASC"))
}

// OrderAscByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderAscByUpdatedAt() MetaVersionQuerySet {
	return qs.w(qs.db.Order("updated_at ASC"))
}

// OrderDescByC is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderDescByC() MetaVersionQuerySet {
	return qs.w(qs.db.Order("c DESC"))
}

// OrderDescByCreatedAt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderDescByCreatedAt() MetaVersionQuerySet {
	return qs.w(qs.db.Order("created_at DESC"))
}

// OrderDescByID is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderDescByID() MetaVersionQuerySet {
	return qs.w(qs.db.Order("id DESC"))
}

// OrderDescByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) OrderDescByUpdatedAt() MetaVersionQuerySet {
	return qs.w(qs.db.Order("updated_at DESC"))
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) UpdatedAtEq(updatedAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("updated_at = ?", updatedAt))
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) UpdatedAtGt(updatedAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("updated_at > ?", updatedAt))
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) UpdatedAtGte(updatedAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("updated_at >= ?", updatedAt))
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) UpdatedAtLt(updatedAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("updated_at < ?", updatedAt))
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) UpdatedAtLte(updatedAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("updated_at <= ?", updatedAt))
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs MetaVersionQuerySet) UpdatedAtNe(updatedAt time.Time) MetaVersionQuerySet {
	return qs.w(qs.db.Where("updated_at != ?", updatedAt))
}

// IncC is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) IncC(c int64) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.C)] = gorm.Expr(string(MetaVersionDBSchema.C)+" + ?", c)
	return u
}

// IncCreatedAt is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) IncCreatedAt(createdAt time.Time) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.CreatedAt)] = gorm.Expr(string(MetaVersionDBSchema.CreatedAt)+" + ?", createdAt)
	return u
}

// IncID is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) IncID(ID int64) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.ID)] = gorm.Expr(string(MetaVersionDBSchema.ID)+" + ?", ID)
	return u
}

// IncUpdatedAt is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) IncUpdatedAt(updatedAt time.Time) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.UpdatedAt)] = gorm.Expr(string(MetaVersionDBSchema.UpdatedAt)+" + ?", updatedAt)
	return u
}

// SetC is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) SetC(c int64) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.C)] = c
	return u
}

// SetCreatedAt is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) SetCreatedAt(createdAt time.Time) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.CreatedAt)] = createdAt
	return u
}

// SetID is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) SetID(ID int64) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.ID)] = ID
	return u
}

// SetUpdatedAt is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) SetUpdatedAt(updatedAt time.Time) MetaVersionUpdater {
	u.fields[string(MetaVersionDBSchema.UpdatedAt)] = updatedAt
	return u
}

// Update is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) Update() error {
	return u.db.Updates(u.fields).Error
}

// UpdateNum is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) UpdateNum() (int64, error) {
	db := u.db.Updates(u.fields)
	return db.RowsAffected, db.Error
}

// With is an autogenerated method
// nolint: dupl
func (u MetaVersionUpdater) With(callback func(fields map[string]interface{}) map[string]interface{}) MetaVersionUpdater {
	u.fields = callback(u.fields)
	return u
}

// ===== END of query set MetaVersionQuerySet

// ===== BEGIN of MetaVersion modifiers

// MetaVersionDBSchemaField describes database schema field. It requires for method 'Update'
type MetaVersionDBSchemaField string

// String method returns string representation of field.
// nolint: dupl
func (f MetaVersionDBSchemaField) String() string {
	return string(f)
}

// MetaVersionDBSchema stores db field names of MetaVersion
var MetaVersionDBSchema = struct {
	ID        MetaVersionDBSchemaField
	CreatedAt MetaVersionDBSchemaField
	UpdatedAt MetaVersionDBSchemaField
	C         MetaVersionDBSchemaField
}{

	ID:        MetaVersionDBSchemaField("id"),
	CreatedAt: MetaVersionDBSchemaField("created_at"),
	UpdatedAt: MetaVersionDBSchemaField("updated_at"),
	C:         MetaVersionDBSchemaField("c"),
}

// Update updates MetaVersion fields by primary key
// nolint: dupl
func (o *MetaVersion) Update(db *gorm.DB, fields ...MetaVersionDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"c":          o.C,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := f.String()
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update MetaVersion %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// MetaVersionUpdater is an MetaVersion updates manager
type MetaVersionUpdater struct {
	fields map[string]interface{}
	db     *gorm.DB
}

// NewMetaVersionUpdater creates new MetaVersion updater
// nolint: dupl
func NewMetaVersionUpdater(db *gorm.DB) MetaVersionUpdater {
	return MetaVersionUpdater{
		fields: map[string]interface{}{},
		db:     db.Model(&MetaVersion{}),
	}
}

// ===== END of MetaVersion modifiers

// ===== END of all query sets
